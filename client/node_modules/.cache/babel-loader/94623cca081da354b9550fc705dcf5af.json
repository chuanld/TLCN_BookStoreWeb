{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nfunction AllUsersApi(token) {\n  _s();\n\n  //const [isLogged, setIsLogged] = useState(false);\n  //const [isAdmin, setIsAdmin] = useState(false);\n  const [inforAll, setInforAll] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getAllUsers = async () => {\n        try {\n          const res = await axios.get(\"/user/all_infor\", {\n            headers: {\n              Authorization: token\n            }\n          }); //setIsLogged(true);\n          //res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n\n          setInforAll(res.data);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getAllUsers();\n    }\n  }, [token]);\n  return {\n    //isLogged: [isLogged, setIsLogged],\n    //isAdmin: [isAdmin, setIsAdmin],\n    inforAll: [inforAll, setInforAll]\n  };\n}\n\n_s(AllUsersApi, \"dScPOauIf70S8zd7MCQ46a4aquQ=\");\n\n_c = AllUsersApi;\nexport default AllUsersApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsersApi\");","map":{"version":3,"sources":["E:/HK1_Nam4/TLCN/bookstore_website/client/src/api/AllUsersApi.js"],"names":["axios","useState","useEffect","AllUsersApi","token","inforAll","setInforAll","getAllUsers","res","get","headers","Authorization","data","err","alert","response","msg"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,KAAJ,EAAW;AACT,YAAMG,WAAW,GAAG,YAAY;AAC9B,YAAI;AACF,gBAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,iBAAV,EAA6B;AAC7CC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEP;AAAjB;AADoC,WAA7B,CAAlB,CADE,CAIF;AACA;;AACAE,UAAAA,WAAW,CAACE,GAAG,CAACI,IAAL,CAAX;AACD,SAPD,CAOE,OAAOC,GAAP,EAAY;AACZC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBI,GAAnB,CAAL;AACD;AACF,OAXD;;AAaAT,MAAAA,WAAW;AACZ;AACF,GAjBQ,EAiBN,CAACH,KAAD,CAjBM,CAAT;AAkBA,SAAO;AACL;AACA;AACAC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX;AAHL,GAAP;AAKD;;GA5BQH,W;;KAAAA,W;AA8BT,eAAeA,WAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction AllUsersApi(token) {\r\n  //const [isLogged, setIsLogged] = useState(false);\r\n  //const [isAdmin, setIsAdmin] = useState(false);\r\n  const [inforAll, setInforAll] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const getAllUsers = async () => {\r\n        try {\r\n          const res = await axios.get(\"/user/all_infor\", {\r\n            headers: { Authorization: token },\r\n          });\r\n          //setIsLogged(true);\r\n          //res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\r\n          setInforAll(res.data);\r\n        } catch (err) {\r\n          alert(err.response.data.msg);\r\n        }\r\n      };\r\n\r\n      getAllUsers();\r\n    }\r\n  }, [token]);\r\n  return {\r\n    //isLogged: [isLogged, setIsLogged],\r\n    //isAdmin: [isAdmin, setIsAdmin],\r\n    inforAll: [inforAll, setInforAll],\r\n  };\r\n}\r\n\r\nexport default AllUsersApi;\r\n"]},"metadata":{},"sourceType":"module"}