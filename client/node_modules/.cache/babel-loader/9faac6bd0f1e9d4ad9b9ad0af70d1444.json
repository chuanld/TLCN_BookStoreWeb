{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nfunction UserApi(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [infor, setInfor] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get(\"/user/infor\", {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setInfor(res.data);\n          console.log(res);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    infor: [infor, setInfor]\n  };\n}\n\n_s(UserApi, \"/K47NnOFOF18w+yEaqbPco7yH7s=\");\n\n_c = UserApi;\nexport default UserApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserApi\");","map":{"version":3,"sources":["E:/HK1_Nam4/TLCN/bookstore_website/client/src/api/UserApi.js"],"names":["axios","useState","useEffect","UserApi","token","isLogged","setIsLogged","isAdmin","setIsAdmin","infor","setInfor","getUser","res","get","headers","Authorization","data","role","console","log","err","alert","response","msg"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,KAAJ,EAAW;AACT,YAAMO,OAAO,GAAG,YAAY;AAC1B,YAAI;AACF,gBAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,aAAV,EAAyB;AACzCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEX;AAAjB;AADgC,WAAzB,CAAlB;AAGAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBT,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AACAE,UAAAA,QAAQ,CAACE,GAAG,CAACI,IAAL,CAAR;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACD,SARD,CAQE,OAAOQ,GAAP,EAAY;AACZC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,GAAnB,CAAL;AACD;AACF,OAZD;;AAaAZ,MAAAA,OAAO;AACR;AACF,GAjBQ,EAiBN,CAACP,KAAD,CAjBM,CAAT;AAkBA,SAAO;AACLC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADL;AAELC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFJ;AAGLC,IAAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR;AAHF,GAAP;AAKD;;GA5BQP,O;;KAAAA,O;AA8BT,eAAeA,OAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction UserApi(token) {\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [infor, setInfor] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const getUser = async () => {\r\n        try {\r\n          const res = await axios.get(\"/user/infor\", {\r\n            headers: { Authorization: token },\r\n          });\r\n          setIsLogged(true);\r\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\r\n          setInfor(res.data);\r\n          console.log(res);\r\n        } catch (err) {\r\n          alert(err.response.data.msg);\r\n        }\r\n      };\r\n      getUser();\r\n    }\r\n  }, [token]);\r\n  return {\r\n    isLogged: [isLogged, setIsLogged],\r\n    isAdmin: [isAdmin, setIsAdmin],\r\n    infor: [infor, setInfor],\r\n  };\r\n}\r\n\r\nexport default UserApi;\r\n"]},"metadata":{},"sourceType":"module"}