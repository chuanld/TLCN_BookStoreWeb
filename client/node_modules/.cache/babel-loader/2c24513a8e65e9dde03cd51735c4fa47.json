{"ast":null,"code":"var _jsxFileName = \"E:\\\\HK1_Nam4\\\\TLCN\\\\bookstore_website\\\\client\\\\src\\\\features\\\\adminpage\\\\features\\\\userlist\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport \"./userlist.css\";\nimport { GlobalState } from \"../../../../GlobalState\";\nimport { DeleteForever, Edit } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport allUsersApi from \"../../../../api/AllUsersApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserList() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [token] = state.token;\n  const [inforAll] = allUsersApi(token).inforAll; // const [token] = state.token;\n  // const [users, setUsers] = useState({\n  //   name: \"\",\n  //   address: \"\",\n  //   phone: \"\",\n  //   password: \"\",\n  //   confirmpassword: \"\",\n  //   role: \"\",\n  // });\n  // const { name, address, phone, password, confirmpassword, role } = users;\n  // const onChangeInput = (e) => {\n  //   const { name, value } = e.target;\n  //   setUsers({ ...users, [name]: value });\n  // };\n  // const columns = [\n  //   {\n  //     field: \"email\",\n  //     headerName: \"Email\",\n  //     width: 300,\n  //     height: 160,\n  //     editable: true,\n  //   },\n  //   {\n  //     field: \"name\",\n  //     headerName: \"Name\",\n  //     width: 150,\n  //     height: 160,\n  //     editable: true,\n  //   },\n  //   {\n  //     field: \"phone\",\n  //     headerName: \"Phone\",\n  //     width: 150,\n  //     height: 160,\n  //     editable: true,\n  //   },\n  //   {\n  //     field: \"address\",\n  //     headerName: \"Address\",\n  //     type: \"number\",\n  //     width: 150,\n  //     height: 160,\n  //     editable: true,\n  //   },\n  //   {\n  //     field: \"cart\",\n  //     headerName: \"Cart\",\n  //     description: \"This column has a value getter and is not sortable.\",\n  //     sortable: false,\n  //     width: 160,\n  //     height: 160,\n  //   },\n  //   {\n  //     field: \"action\",\n  //     headerName: \"Action\",\n  //     sortable: false,\n  //     width: 160,\n  //     height: 160,\n  //     renderCell: (params) => {\n  //       return (\n  //         <>\n  //           <Link to=\"/userdetail\">\n  //             <Settings className=\"userListEdit\" />\n  //           </Link>\n  //           <DeleteForever className=\"userListDelete\" />\n  //         </>\n  //       );\n  //     },\n  //   },\n  // ];\n  // const rows = [\n  //   inforAll.map((user) => ({\n  //     id: user._id,\n  //     name: user.name,\n  //     email: user.email,\n  //     phone: user.phone,\n  //     address: user.address,\n  //     role: user.role,\n  //     action: <DeleteOutline />,\n  //   })),\n  // ];\n\n  const deleteSubmit = async (id, email) => {\n    // e.preventDefault();\n    try {\n      console.log(id, email);\n\n      if (window.confirm(`Are you sure delete user ${email}?`)) {\n        const result = await axios.delete(`/user/delete/${id}`, {\n          headers: {\n            Authorization: token\n          }\n        });\n        alert(result.data.msg);\n      }\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userListTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"List user in Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/createUser\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"userAddButton\",\n          children: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usersList\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"userListUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: inforAll.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/userdetail/${user._id}`,\n                children: /*#__PURE__*/_jsxDEV(Edit, {\n                  className: \"userListEdit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DeleteForever, {\n                className: \"userListDelete\",\n                onClick: () => deleteSubmit(user._id, user.email)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserList, \"kdLImxeHm3898p7tqgy8Fclg5s8=\");\n\n_c = UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["E:/HK1_Nam4/TLCN/bookstore_website/client/src/features/adminpage/features/userlist/UserList.js"],"names":["React","useContext","GlobalState","DeleteForever","Edit","Link","axios","allUsersApi","UserList","state","token","inforAll","deleteSubmit","id","email","console","log","window","confirm","result","delete","headers","Authorization","alert","data","msg","err","response","map","user","_id","name","phone","address","role"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport \"./userlist.css\";\r\nimport { GlobalState } from \"../../../../GlobalState\";\r\n\r\nimport { DeleteForever, Edit } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport allUsersApi from \"../../../../api/AllUsersApi\";\r\n\r\nexport default function UserList() {\r\n  const state = useContext(GlobalState);\r\n  const [token] = state.token;\r\n  const [inforAll] = allUsersApi(token).inforAll;\r\n\r\n  // const [token] = state.token;\r\n\r\n  // const [users, setUsers] = useState({\r\n  //   name: \"\",\r\n  //   address: \"\",\r\n  //   phone: \"\",\r\n  //   password: \"\",\r\n  //   confirmpassword: \"\",\r\n  //   role: \"\",\r\n  // });\r\n  // const { name, address, phone, password, confirmpassword, role } = users;\r\n\r\n  // const onChangeInput = (e) => {\r\n  //   const { name, value } = e.target;\r\n  //   setUsers({ ...users, [name]: value });\r\n  // };\r\n\r\n  // const columns = [\r\n  //   {\r\n  //     field: \"email\",\r\n  //     headerName: \"Email\",\r\n  //     width: 300,\r\n  //     height: 160,\r\n  //     editable: true,\r\n  //   },\r\n  //   {\r\n  //     field: \"name\",\r\n  //     headerName: \"Name\",\r\n  //     width: 150,\r\n  //     height: 160,\r\n  //     editable: true,\r\n  //   },\r\n  //   {\r\n  //     field: \"phone\",\r\n  //     headerName: \"Phone\",\r\n  //     width: 150,\r\n  //     height: 160,\r\n  //     editable: true,\r\n  //   },\r\n  //   {\r\n  //     field: \"address\",\r\n  //     headerName: \"Address\",\r\n  //     type: \"number\",\r\n  //     width: 150,\r\n  //     height: 160,\r\n  //     editable: true,\r\n  //   },\r\n  //   {\r\n  //     field: \"cart\",\r\n  //     headerName: \"Cart\",\r\n  //     description: \"This column has a value getter and is not sortable.\",\r\n  //     sortable: false,\r\n  //     width: 160,\r\n  //     height: 160,\r\n  //   },\r\n  //   {\r\n  //     field: \"action\",\r\n  //     headerName: \"Action\",\r\n  //     sortable: false,\r\n  //     width: 160,\r\n  //     height: 160,\r\n  //     renderCell: (params) => {\r\n  //       return (\r\n  //         <>\r\n  //           <Link to=\"/userdetail\">\r\n  //             <Settings className=\"userListEdit\" />\r\n  //           </Link>\r\n  //           <DeleteForever className=\"userListDelete\" />\r\n  //         </>\r\n  //       );\r\n  //     },\r\n  //   },\r\n  // ];\r\n\r\n  // const rows = [\r\n  //   inforAll.map((user) => ({\r\n\r\n  //     id: user._id,\r\n  //     name: user.name,\r\n  //     email: user.email,\r\n  //     phone: user.phone,\r\n  //     address: user.address,\r\n  //     role: user.role,\r\n  //     action: <DeleteOutline />,\r\n\r\n  //   })),\r\n  // ];\r\n\r\n  const deleteSubmit = async (id, email) => {\r\n    // e.preventDefault();\r\n\r\n    try {\r\n      console.log(id, email);\r\n      if (window.confirm(`Are you sure delete user ${email}?`)) {\r\n        const result = await axios.delete(`/user/delete/${id}`, {\r\n          headers: { Authorization: token },\r\n        });\r\n        alert(result.data.msg);\r\n      }\r\n    } catch (err) {\r\n      alert(err.response.data.msg);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"userListTitle\">\r\n        <h4>List user in Database</h4>\r\n        <Link to=\"/createUser\">\r\n          <button className=\"userAddButton\">Create User</button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"usersList\">\r\n        <table className=\"userListUser\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Address</th>\r\n              <th>role</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {inforAll.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.phone}</td>\r\n                <td>{user.address}</td>\r\n                <td>{user.role}</td>\r\n                <td>\r\n                  <Link to={`/userdetail/${user._id}`}>\r\n                    <Edit className=\"userListEdit\" />\r\n                  </Link>\r\n\r\n                  <DeleteForever\r\n                    className=\"userListDelete\"\r\n                    onClick={() => deleteSubmit(user._id, user.email)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {/* <div style={{ height: 500, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={5}\r\n          checkboxSelection\r\n          disableSelectionOnClick\r\n        />\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}