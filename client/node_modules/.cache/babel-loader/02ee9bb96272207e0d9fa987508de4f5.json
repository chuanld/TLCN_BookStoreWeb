{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nfunction UserApi(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [infor, setInfor] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [orderInfo, setOrderInfo] = useState([]);\n  const [callback, setCallback] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get(\"/user/infor\", {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setInfor(res.data);\n          setCart(res.data.cart); //console.log(res);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Login join with us and shopping\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      const result = await axios.patch(\"/user/addtocart\", {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      alert(result.data.msg);\n    } else {\n      alert(\"This product has beed added to cart\");\n    }\n  };\n\n  useEffect(() => {\n    if (token) {\n      const getOrderInfo = async () => {\n        const result = await axios.get(\"/user/order_infor\", {\n          headers: {\n            Authorization: token\n          }\n        });\n        setOrderInfo(result.data);\n      };\n\n      getOrderInfo();\n    }\n  }, [token, callback]);\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    infor: [infor, setInfor],\n    cart: [cart, setCart],\n    addCart: addCart,\n    orderInfo: [orderInfo, setOrderInfo],\n    callback: [callback, setCallback]\n  };\n}\n\n_s(UserApi, \"Onzan0+Uv02y1tkJifYQexOEvAk=\");\n\n_c = UserApi;\nexport default UserApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserApi\");","map":{"version":3,"sources":["E:/HK1_Nam4/TLCN/bookstore_website/client/src/api/UserApi.js"],"names":["axios","useState","useEffect","UserApi","token","isLogged","setIsLogged","isAdmin","setIsAdmin","infor","setInfor","cart","setCart","orderInfo","setOrderInfo","callback","setCallback","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","addCart","product","check","every","item","_id","quantity","result","patch","getOrderInfo"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction UserApi(token) {\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [infor, setInfor] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [orderInfo, setOrderInfo] = useState([]);\r\n  const [callback, setCallback] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const getUser = async () => {\r\n        try {\r\n          const res = await axios.get(\"/user/infor\", {\r\n            headers: { Authorization: token },\r\n          });\r\n          setIsLogged(true);\r\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\r\n          setInfor(res.data);\r\n          setCart(res.data.cart);\r\n          //console.log(res);\r\n        } catch (err) {\r\n          alert(err.response.data.msg);\r\n        }\r\n      };\r\n      getUser();\r\n    }\r\n  }, [token]);\r\n\r\n  const addCart = async (product) => {\r\n    if (!isLogged) return alert(\"Login join with us and shopping\");\r\n\r\n    const check = cart.every((item) => {\r\n      return item._id !== product._id;\r\n    });\r\n\r\n    if (check) {\r\n      setCart([...cart, { ...product, quantity: 1 }]);\r\n      const result = await axios.patch(\r\n        \"/user/addtocart\",\r\n        { cart: [...cart, { ...product, quantity: 1 }] },\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n      alert(result.data.msg);\r\n    } else {\r\n      alert(\"This product has beed added to cart\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const getOrderInfo = async () => {\r\n        const result = await axios.get(\"/user/order_infor\", {\r\n          headers: { Authorization: token },\r\n        });\r\n        setOrderInfo(result.data);\r\n      };\r\n      getOrderInfo();\r\n    }\r\n  }, [token, callback]);\r\n  return {\r\n    isLogged: [isLogged, setIsLogged],\r\n    isAdmin: [isAdmin, setIsAdmin],\r\n    infor: [infor, setInfor],\r\n    cart: [cart, setCart],\r\n    addCart: addCart,\r\n    orderInfo: [orderInfo, setOrderInfo],\r\n    callback: [callback, setCallback],\r\n  };\r\n}\r\n\r\nexport default UserApi;\r\n"]},"metadata":{},"sourceType":"module"}